name: e2e and deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    env:
      DATABASE_URL: postgresql://postgres:@localhost:5432/next-prisma-starter-new
      GITHUB_ID: Iv1.bb4a76e72b716c94
      GITHUB_SECRET: 25976a58430a2d96341038d6995a0d0eb6d42eba
      JWT_SECRET: secret
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: pk_test_cHJlY2lvdXMtdGFycG9uLTEzLmNsZXJrLmFjY291bnRzLmRldiQ
      CLERK_SECRET_KEY: sk_test_4N6Y7uN8ELoXf708qOAgcMvSndEqkq9QEnHgmJCF6R
      NODE_ENV: test
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DATABASE: trpcdb
          POSTGRES_USER: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
    
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: ['18.x']
        os: [ubuntu-latest]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          # cache: 'pnpm' # You can active this cache when your repo has a lockfile

      - name: Install deps (with cache)
        run: pnpm install

      - name: Install playwright
        run: pnpm playwright install chromium

      - name: Next.js cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-${{ runner.node }}-${{ hashFiles('**/pnpm-lock.yaml') }}-nextjs

      - name: Setup Prisma
        run: pnpm prebuild

      - name: Build 
        run: pnpm build 

      - name: Test
        run: pnpm test-start && pnpm test-dev

      - name: Upload test results
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: test results
          path: |
            playwright/test-results
  deploy:
    needs: build-and-test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: ['18.x']
        os: [ubuntu-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Deploy to Netlify
      uses: netlify/actions/cli@main
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}  # Create this secret in your repository settings
        NETLIFY_SITE_ID:  ${{ secrets.NETLIFY_SITE_ID }} # Set your Netlify site ID here
      with:
        args: deploy --prod

